There needs to be a folder "MyResultFolder". This folder needs to contain a "comp.gap" file, containing a single function definition. This function is called "comp". It takes two positive integer arguments, n and K, and returns an algebra object.
n denotes the number of vertices.
K denotes the power of the arrow ideal taken as quotient, usually.
Example:

    comp := function(n, K)
        local A, Q, orientation;
        orientation = [];
        for i in [1..n-1] do
            Add(orientation, "r");
        od;
        Q := DynkinQuiver("A", n, orientation);
        A := TruncatedPathAlgebra(Rationals, Q, K);

        return A;
    end;



Then open GAP in an appropriate folder, and call the following:

    Read("foldertest.gap");

    ComputeAlgebrasUpTo("MyResultFolder", n, K);




